{"version":3,"sources":["components/stripe-button/stripe-button.component.jsx","components/checkout-item/checkout-item.component.jsx","pages/checkout/checkout.component.jsx"],"names":["StripeCheckButton","price","priceInCentsForStripe","label","name","billingAddress","shippingAddress","image","description","amount","panelLabel","token","axios","url","method","data","stripeKey","connect","dispatch","clearItem","item","addItem","removeItem","cartItem","imageUrl","quantity","className","alt","src","onClick","mapStateToProps","createStructuredSelector","cartItems","selectCartItems","total","selectCartTotal","map","key","id"],"mappings":"wPAsCeA,EAhCW,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACnBC,EAAgC,IAARD,EAe9B,OACI,kBAAC,IAAD,CACIE,MAAM,UACNC,KAAK,sBACLC,gBAAc,EACdC,iBAAe,EACfC,MAAM,+BACNC,YAAW,yBAAoBP,GAC/BQ,OAAQP,EACRQ,WAAW,UACXC,MAtBQ,SAAAA,GACZC,IAAM,CACFC,IAAI,UACJC,OAAO,OACPC,KAAK,CACDN,OAAOP,EACPS,YAiBJK,UAzBe,iH,iBCyBZC,cAAQ,MAPI,SAAAC,GAAQ,MAAK,CACpCC,UAAW,SAAAC,GAAI,OAAIF,EAASC,YAAUC,KACtCC,QAAS,SAAAD,GAAI,OAAIF,EAASG,YAAQD,KAClCE,WAAY,SAAAF,GAAI,OAAIF,EAASI,YAAWF,QAI7BH,EA1BM,SAAC,GAAkD,IAAhDM,EAA+C,EAA/CA,SAAUJ,EAAqC,EAArCA,UAAWE,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,WAC1ClB,EAAoCmB,EAApCnB,KAAMoB,EAA8BD,EAA9BC,SAAUvB,EAAoBsB,EAApBtB,MAAOwB,EAAaF,EAAbE,SAC/B,OACI,yBAAKC,UAAU,iBACX,yBAAKA,UAAU,mBACX,yBAAKC,IAAI,OAAOC,IAAKJ,KAEzB,0BAAME,UAAU,QAAQtB,GACxB,0BAAMsB,UAAU,YACZ,yBAAKA,UAAU,QAAQG,QAAS,kBAAMP,EAAWC,KAAjD,UACA,0BAAMG,UAAU,SAASD,GACzB,yBAAKC,UAAU,QAAQG,QAAS,kBAAMR,EAAQE,KAA9C,WAEJ,0BAAMG,UAAU,SAASzB,GACzB,yBAAKyB,UAAU,gBAAgBG,QAAS,kBAAMV,EAAUI,KAAxD,cC6BNO,G,OAAkBC,YAAyB,CAC7CC,UAAWC,IACXC,MAAOC,OAGIlB,sBAAQa,EAARb,EA5CM,SAAC,GAAD,IAAGe,EAAH,EAAGA,UAAWE,EAAd,EAAcA,MAAd,OACjB,yBAAKR,UAAU,iBACX,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,yBACX,0CAGJ,yBAAKA,UAAU,gBACX,8CAGJ,yBAAKA,UAAU,gBACX,2CAGJ,yBAAKA,UAAU,gBACX,wCAGJ,yBAAKA,UAAU,gBACX,0CAIJM,EAAUI,KAAI,SAAAb,GAAQ,OAClB,kBAAC,EAAD,CAAcc,IAAKd,EAASe,GAAIf,SAAUA,OAElD,yBAAKG,UAAU,SACX,wCAAcQ,IAElB,yBAAKR,UAAU,gBAAf,2DACA,6BADA,iDAIA,kBAAC,EAAD,CAAmBzB,MAAOiC","file":"static/js/7.fef450b3.chunk.js","sourcesContent":["import React from 'react';\nimport StripeCheckout from 'react-stripe-checkout';\nimport axios from 'axios';\n\n\n\nconst StripeCheckButton = ({ price }) => {\n    const priceInCentsForStripe = price * 100;\n    const publishableKey = 'pk_test_51HO9hhAxxHv4aPQa00hYeO2D1b2ZluPUDijpjEO8epFaDiqyhvyM1uxs87mjD47B6yNhmN3RjNLS7s1JWIbEX0EB00uXMxfAdd';\n\n    const onToken = token => {\n        axios({\n            url:'payment',\n            method:'post',\n            data:{\n                amount:priceInCentsForStripe,\n                token\n            }\n        })\n    \n    }\n\n    return (\n        <StripeCheckout\n            label='Pay Now'\n            name='CROWN CLothing Ltd.'\n            billingAddress\n            shippingAddress\n            image='https:svgshare.com/i/CUz.svg'\n            description={`Your total is $${price}`}\n            amount={priceInCentsForStripe}\n            panelLabel='Pay Now'\n            token={onToken}\n            stripeKey={publishableKey}\n        />\n    )\n}\n\nexport default StripeCheckButton;","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport './checkout-item.styles.scss';\nimport { clearItem, addItem, removeItem } from '../../redux/cart/cart.actions';\n\n\nconst CheckoutItem = ({ cartItem, clearItem, addItem, removeItem }) => {\n    const { name, imageUrl, price, quantity } = cartItem;\n    return (\n        <div className='checkout-item'>\n            <div className='image-container'>\n                <img alt=\"item\" src={imageUrl}></img>\n            </div>\n            <span className='name'>{name}</span>\n            <span className='quantity'>\n                <div className='arrow' onClick={() => removeItem(cartItem)}>&#10094;</div>\n                <span className='value'>{quantity}</span>\n                <div className='arrow' onClick={() => addItem(cartItem)}>&#10095;</div>\n            </span>\n            <span className='price'>{price}</span>\n            <div className='remove-button' onClick={() => clearItem(cartItem)}>&#10005;</div>\n        </div>\n    )\n}\n\nconst mapDispatchToProps = dispatch => ({\n    clearItem: item => dispatch(clearItem(item)),\n    addItem: item => dispatch(addItem(item)),\n    removeItem: item => dispatch(removeItem(item))\n\n})\n\nexport default connect(null, mapDispatchToProps)(CheckoutItem);","import React from 'react'\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { selectCartTotal } from '../../redux/cart/cart.selectors';\nimport StripeCheckButton from '../../components/stripe-button/stripe-button.component';\nimport CheckoutItem from '../../components/checkout-item/checkout-item.component';\n\n\nimport '../checkout/checkout.styles.scss';\nimport { selectCartItems } from '../../redux/cart/cart.selectors';\n\nconst CheckoutPage = ({ cartItems, total }) => (\n    <div className='checkout-page'>\n        <div className='checkout-header'>\n            <div className='checkout-header-block'>\n                <span>Product</span>\n            </div>\n\n            <div className='header-block'>\n                <span>Description</span>\n            </div>\n\n            <div className='header-block'>\n                <span>Quantity</span>\n            </div>\n\n            <div className='header-block'>\n                <span>Price</span>\n            </div>\n\n            <div className='header-block'>\n                <span>Remove</span>\n            </div>\n        </div>\n        {\n            cartItems.map(cartItem => (\n                <CheckoutItem key={cartItem.id} cartItem={cartItem}></CheckoutItem>))\n        }\n        <div className='total'>\n            <span>TOTAL:${total}</span>\n        </div>\n        <div className='test-warning'>*Please use the following test credit card for payments*\n        <br />\n        4242 4242 4242 4242 - Exp : 01/20 - CVV : 123\n        </div>\n        <StripeCheckButton price={total} />\n\n    </div>\n)\n\nconst mapStateToProps = createStructuredSelector({\n    cartItems: selectCartItems,\n    total: selectCartTotal\n})\n\nexport default connect(mapStateToProps)(CheckoutPage);"],"sourceRoot":""}