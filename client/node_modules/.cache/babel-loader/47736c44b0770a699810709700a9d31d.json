{"ast":null,"code":"export const addItemsToCart = (cartItems, itemToAdd) => {\n  const existingItem = cartItems.find(cartItem => cartItem.id === itemToAdd.id);\n\n  if (existingItem) {\n    return cartItems.map(cartItem => cartItem.id === itemToAdd.id ? { ...cartItem,\n      quantity: cartItem.quantity + 1\n    } : cartItem);\n  }\n\n  return [...cartItems, { ...itemToAdd,\n    quantity: 1\n  }];\n};\nexport const removeItemFromCart = (cartItems, itemToRemove) => {\n  if (itemToRemove.quantity === 0) {\n    return cartItems.find(cartItem => cartItem.id !== itemToRemove.id);\n  } else {\n    return cartItems.map(cartItem => {\n      if (cartItem.id === itemToRemove.id) {\n        cartItem.quantity = cartItem.quantity - 1;\n      }\n    });\n  }\n};","map":{"version":3,"sources":["/Users/balasr/Documents/Bala/Pers/ReactApp/App2-Ecommerce/crown-clothing/src/redux/cart/cart.utils.js"],"names":["addItemsToCart","cartItems","itemToAdd","existingItem","find","cartItem","id","map","quantity","removeItemFromCart","itemToRemove"],"mappings":"AAAA,OAAO,MAAMA,cAAc,GAAG,CAACC,SAAD,EAAYC,SAAZ,KAA0B;AAEpD,QAAMC,YAAY,GAAGF,SAAS,CAACG,IAAV,CAAeC,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAgBJ,SAAS,CAACI,EAArD,CAArB;;AAEA,MAAIH,YAAJ,EAAkB;AACd,WAAOF,SAAS,CAACM,GAAV,CAAcF,QAAQ,IACzBA,QAAQ,CAACC,EAAT,KAAgBJ,SAAS,CAACI,EAA1B,GAA+B,EAAE,GAAGD,QAAL;AAAeG,MAAAA,QAAQ,EAAEH,QAAQ,CAACG,QAAT,GAAoB;AAA7C,KAA/B,GAAkFH,QAD/E,CAAP;AAGH;;AAED,SAAO,CAAC,GAAGJ,SAAJ,EAAe,EAAE,GAAGC,SAAL;AAAgBM,IAAAA,QAAQ,EAAE;AAA1B,GAAf,CAAP;AAEH,CAZM;AAeP,OAAO,MAAMC,kBAAkB,GAAG,CAACR,SAAD,EAAYS,YAAZ,KAA6B;AAE3D,MAAIA,YAAY,CAACF,QAAb,KAA0B,CAA9B,EAAiC;AAC7B,WAAOP,SAAS,CAACG,IAAV,CAAeC,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAgBI,YAAY,CAACJ,EAAxD,CAAP;AACH,GAFD,MAEO;AACH,WAAOL,SAAS,CAACM,GAAV,CAAcF,QAAQ,IAAI;AAC7B,UAAIA,QAAQ,CAACC,EAAT,KAAgBI,YAAY,CAACJ,EAAjC,EAAqC;AACjCD,QAAAA,QAAQ,CAACG,QAAT,GAAoBH,QAAQ,CAACG,QAAT,GAAoB,CAAxC;AACH;AACJ,KAJM,CAAP;AAKH;AACJ,CAXM","sourcesContent":["export const addItemsToCart = (cartItems, itemToAdd) => {\n\n    const existingItem = cartItems.find(cartItem => cartItem.id === itemToAdd.id);\n\n    if (existingItem) {\n        return cartItems.map(cartItem =>\n            cartItem.id === itemToAdd.id ? { ...cartItem, quantity: cartItem.quantity + 1 } : cartItem\n        )\n    }\n\n    return [...cartItems, { ...itemToAdd, quantity: 1 }]\n\n}\n\n\nexport const removeItemFromCart = (cartItems, itemToRemove) => {\n\n    if (itemToRemove.quantity === 0) {\n        return cartItems.find(cartItem => cartItem.id !== itemToRemove.id);\n    } else {\n        return cartItems.map(cartItem => {\n            if (cartItem.id === itemToRemove.id) {\n                cartItem.quantity = cartItem.quantity - 1;\n            }\n        })\n    }\n}"]},"metadata":{},"sourceType":"module"}