{"ast":null,"code":"import { createSelector } from 'reselect';\n\nconst selectCart = state => state.cart;\n\nexport const selectCartItems = createSelector([selectCart], cart => cart.cartItems);\nexport const selectCartHidden = createSelector([selectCart], cart => cart.hidden);\nexport const selectCartItemsCount = createSelector([selectCartItems], cartItems => cartItems.reduce((accumulatedQty, cartItem) => accumulatedQty + cartItem.quantity, 0));\nexport const selectCartTotal = createSelector([selectCartItems], cartItems => cartItems.reduce((accumulatedTotal, cartItem) => accumulatedTotal + cartItem.quantity * cartItem.price, 0));","map":{"version":3,"sources":["/Users/balasr/Documents/Bala/Pers/ReactApp/App2-Ecommerce/crown-clothing/src/redux/cart/cart.selectors.js"],"names":["createSelector","selectCart","state","cart","selectCartItems","cartItems","selectCartHidden","hidden","selectCartItemsCount","reduce","accumulatedQty","cartItem","quantity","selectCartTotal","accumulatedTotal","price"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B;;AAGA,MAAMC,UAAU,GAAGC,KAAK,IAAIA,KAAK,CAACC,IAAlC;;AAEA,OAAO,MAAMC,eAAe,GAAGJ,cAAc,CACzC,CAACC,UAAD,CADyC,EAEzCE,IAAI,IAAIA,IAAI,CAACE,SAF4B,CAAtC;AAKP,OAAO,MAAMC,gBAAgB,GAACN,cAAc,CACxC,CAACC,UAAD,CADwC,EAExCE,IAAI,IAAEA,IAAI,CAACI,MAF6B,CAArC;AAKP,OAAO,MAAMC,oBAAoB,GAAGR,cAAc,CAC9C,CAACI,eAAD,CAD8C,EAE9CC,SAAS,IAAIA,SAAS,CAACI,MAAV,CAAiB,CAACC,cAAD,EAAiBC,QAAjB,KAA8BD,cAAc,GAAGC,QAAQ,CAACC,QAAzE,EAAmF,CAAnF,CAFiC,CAA3C;AAKP,OAAO,MAAMC,eAAe,GAACb,cAAc,CACvC,CAACI,eAAD,CADuC,EAEvCC,SAAS,IAAIA,SAAS,CAACI,MAAV,CAAiB,CAACK,gBAAD,EAAmBH,QAAnB,KAAgCG,gBAAgB,GAAGH,QAAQ,CAACC,QAAT,GAAoBD,QAAQ,CAACI,KAAjG,EAAwG,CAAxG,CAF0B,CAApC","sourcesContent":["import { createSelector } from 'reselect'\n\n\nconst selectCart = state => state.cart;\n\nexport const selectCartItems = createSelector(\n    [selectCart],\n    cart => cart.cartItems\n);\n\nexport const selectCartHidden=createSelector(\n    [selectCart],\n    cart=>cart.hidden\n)\n\nexport const selectCartItemsCount = createSelector(\n    [selectCartItems],\n    cartItems => cartItems.reduce((accumulatedQty, cartItem) => accumulatedQty + cartItem.quantity, 0)\n)\n\nexport const selectCartTotal=createSelector(\n    [selectCartItems],\n    cartItems => cartItems.reduce((accumulatedTotal, cartItem) => accumulatedTotal + cartItem.quantity * cartItem.price, 0)\n)"]},"metadata":{},"sourceType":"module"}