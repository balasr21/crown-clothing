{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nvar firebaseConfig = {\n  apiKey: \"AIzaSyAwYNSCbedJzs-saJg0txpcxeeSEcISNxA\",\n  authDomain: \"crown-db-7e544.firebaseapp.com\",\n  databaseURL: \"https://crown-db-7e544.firebaseio.com\",\n  projectId: \"crown-db-7e544\",\n  storageBucket: \"crown-db-7e544.appspot.com\",\n  messagingSenderId: \"275203310086\",\n  appId: \"1:275203310086:web:6fda39c7495ccfc98b3987\",\n  measurementId: \"G-MZ2QREYFCB\"\n};\nexport const CreateUserProfile = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapshot = await userRef.get();\n\n  if (!snapshot.exists) {\n    // Create User Profile\n    console.log(\"Creating Profile\");\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log(\"Error in saving user profile [{}]\", error.message);\n    }\n  }\n\n  return userRef;\n};\nfirebase.initializeApp(firebaseConfig);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nvar provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const SignInWithGoogle = () => firebase.auth().signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["/Users/balasr/Documents/Bala/Pers/ReactApp/App2-Ecommerce/crown-clothing/src/firebase/firebase.utils.js"],"names":["firebase","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","CreateUserProfile","userAuth","additionalData","userRef","firestore","doc","uid","snapshot","get","exists","console","log","displayName","email","createdAt","Date","set","error","message","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","SignInWithGoogle","signInWithPopup"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,eAAP;AACA,OAAO,oBAAP;AAEA,IAAIC,cAAc,GAAG;AAEjBC,EAAAA,MAAM,EAAE,yCAFS;AAGjBC,EAAAA,UAAU,EAAE,gCAHK;AAIjBC,EAAAA,WAAW,EAAE,uCAJI;AAKjBC,EAAAA,SAAS,EAAE,gBALM;AAMjBC,EAAAA,aAAa,EAAE,4BANE;AAOjBC,EAAAA,iBAAiB,EAAE,cAPF;AAQjBC,EAAAA,KAAK,EAAE,2CARU;AASjBC,EAAAA,aAAa,EAAE;AATE,CAArB;AAaA,OAAO,MAAMC,iBAAiB,GAAC,OAAOC,QAAP,EAAgBC,cAAhB,KAAiC;AAE5D,MAAG,CAACD,QAAJ,EAAc;AAEd,QAAME,OAAO,GAACC,SAAS,CAACC,GAAV,CAAe,SAAQJ,QAAQ,CAACK,GAAI,EAApC,CAAd;AAEA,QAAMC,QAAQ,GAAC,MAAMJ,OAAO,CAACK,GAAR,EAArB;;AAEA,MAAG,CAACD,QAAQ,CAACE,MAAb,EAAoB;AAClB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACA,UAAM;AAAEC,MAAAA,WAAF;AAAcC,MAAAA;AAAd,QAAqBZ,QAA3B;AACA,UAAMa,SAAS,GAAC,IAAIC,IAAJ,EAAhB;;AAEN,QAAG;AACG,YAAMZ,OAAO,CAACa,GAAR,CAAY;AACdJ,QAAAA,WADc;AAEdC,QAAAA,KAFc;AAGdC,QAAAA,SAHc;AAId,WAAGZ;AAJW,OAAZ,CAAN;AAMD,KAPL,CAOK,OAAMe,KAAN,EAAY;AACTP,MAAAA,OAAO,CAACC,GAAR,CAAY,mCAAZ,EAAgDM,KAAK,CAACC,OAAtD;AACH;AAGA;;AACD,SAAOf,OAAP;AAEH,CA7BM;AA+BPb,QAAQ,CAAC6B,aAAT,CAAuB5B,cAAvB;AACA,OAAO,MAAM6B,IAAI,GAAC9B,QAAQ,CAAC8B,IAAT,EAAX;AACP,OAAO,MAAMhB,SAAS,GAACd,QAAQ,CAACc,SAAT,EAAhB;AAEP,IAAIiB,QAAQ,GAAG,IAAI/B,QAAQ,CAAC8B,IAAT,CAAcE,kBAAlB,EAAf;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAACC,EAAAA,MAAM,EAAC;AAAR,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAC,MAAInC,QAAQ,CAAC8B,IAAT,GAAgBM,eAAhB,CAAgCL,QAAhC,CAA3B;AAEP,eAAe/B,QAAf","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\n\nvar firebaseConfig = {\n\n    apiKey: \"AIzaSyAwYNSCbedJzs-saJg0txpcxeeSEcISNxA\",\n    authDomain: \"crown-db-7e544.firebaseapp.com\",\n    databaseURL: \"https://crown-db-7e544.firebaseio.com\",\n    projectId: \"crown-db-7e544\",\n    storageBucket: \"crown-db-7e544.appspot.com\",\n    messagingSenderId: \"275203310086\",\n    appId: \"1:275203310086:web:6fda39c7495ccfc98b3987\",\n    measurementId: \"G-MZ2QREYFCB\"\n\n}\n\nexport const CreateUserProfile=async (userAuth,additionalData)=>{\n\n    if(!userAuth) return;\n\n    const userRef=firestore.doc(`users/${userAuth.uid}`);\n\n    const snapshot=await userRef.get();\n    \n    if(!snapshot.exists){\n      // Create User Profile\n      console.log(\"Creating Profile\")\n      const { displayName,email}=userAuth;\n      const createdAt=new Date();\n      \ntry{\n      await userRef.set({\n          displayName,\n          email,\n          createdAt,\n          ...additionalData\n      });\n    }catch(error){\n        console.log(\"Error in saving user profile [{}]\",error.message);\n    }\n\n\n    }\n    return userRef;\n\n}\n\nfirebase.initializeApp(firebaseConfig);\nexport const auth=firebase.auth();\nexport const firestore=firebase.firestore();\n\nvar provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({prompt:'select_account'});\nexport const SignInWithGoogle=()=>firebase.auth().signInWithPopup(provider);\n\nexport default firebase;"]},"metadata":{},"sourceType":"module"}