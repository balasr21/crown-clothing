{"ast":null,"code":"var _jsxFileName = \"/Users/balasr/Documents/Bala/Pers/ReactApp/App2-Ecommerce/crown-clothing/src/pages/shoppage/shoppage.component.jsx\";\nimport React from 'react';\nimport CollectionOverview from '../../components/collection-overview/collection-overview.component';\nimport CollectionPage from '../collection/collection.component';\nimport { firestore, convertCollectionSnapshotsToMap } from '../../firebase/firebase.utils';\nimport { connect } from 'react-redux';\nimport { selectIsCollectionFetching } from '../../redux/shop/shop.selector';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nimport { Route } from 'react-router-dom';\nimport fetchCollectionStartAsync from '../../redux/shop/shop.actions';\nimport { createStructuredSelector } from 'reselect';\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  componentDidMount() {\n    const {\n      fetchCollectionStartAsync\n    } = this.props;\n    fetchCollectionStartAsync();\n  }\n\n  render() {\n    const {\n      match,\n      isCollectionFetching\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      render: props => /*#__PURE__*/React.createElement(CollectionOverviewWithSpinner, Object.assign({\n        isloading: isCollectionFetching\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 72\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      render: props => /*#__PURE__*/React.createElement(CollectionPageWithSpinner, Object.assign({\n        isloading: isCollectionFetching\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 80\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector(isCollectionFetching = selectIsCollectionFetching);\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionStartAsync: dispatch(fetchCollectionStartAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/balasr/Documents/Bala/Pers/ReactApp/App2-Ecommerce/crown-clothing/src/pages/shoppage/shoppage.component.jsx"],"names":["React","CollectionOverview","CollectionPage","firestore","convertCollectionSnapshotsToMap","connect","selectIsCollectionFetching","WithSpinner","Route","fetchCollectionStartAsync","createStructuredSelector","CollectionOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","componentDidMount","props","render","match","isCollectionFetching","path","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,kBAAP,MAA+B,oEAA/B;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAQC,0BAAR,QAAyC,gCAAzC;AACA,OAAOC,WAAP,MAAwB,sDAAxB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAOC,yBAAP,MAAsC,+BAAtC;AACA,SAASC,wBAAT,QAAyC,UAAzC;AAEA,MAAMC,6BAA6B,GAAGJ,WAAW,CAACN,kBAAD,CAAjD;AACA,MAAMW,yBAAyB,GAAGL,WAAW,CAACL,cAAD,CAA7C;;AAEA,MAAMW,QAAN,SAAuBb,KAAK,CAACc,SAA7B,CAAuC;AAEnCC,EAAAA,iBAAiB,GAAG;AAChB,UAAM;AAAEN,MAAAA;AAAF,QAAgC,KAAKO,KAA3C;AACAP,IAAAA,yBAAyB;AAC5B;;AAEDQ,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA,KAAF;AAAQC,MAAAA;AAAR,QAAiC,KAAKH,KAA5C;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAEE,KAAK,CAACE,IAAK,EAAjC;AAAoC,MAAA,MAAM,EAAGJ,KAAD,iBAAW,oBAAC,6BAAD;AAA+B,QAAA,SAAS,EAAEG;AAA1C,SAAoEH,KAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAEE,KAAK,CAACE,IAAK,gBAA3B;AAA4C,MAAA,MAAM,EAAGJ,KAAD,iBAAW,oBAAC,yBAAD;AAA2B,QAAA,SAAS,EAAEG;AAAtC,SAAgEH,KAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAMH;;AAfkC;;AAmBvC,MAAMK,eAAe,GAACX,wBAAwB,CAC1CS,oBAAoB,GAACb,0BADqB,CAA9C;;AAIA,MAAMgB,kBAAkB,GAAGC,QAAQ,KAAK;AACpCd,EAAAA,yBAAyB,EAAEc,QAAQ,CAACd,yBAAyB,EAA1B;AADC,CAAL,CAAnC;;AAIA,eAAeJ,OAAO,CAACgB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CT,QAA7C,CAAf","sourcesContent":["import React from 'react';\nimport CollectionOverview from '../../components/collection-overview/collection-overview.component';\nimport CollectionPage from '../collection/collection.component';\nimport { firestore, convertCollectionSnapshotsToMap } from '../../firebase/firebase.utils';\nimport { connect } from 'react-redux';\nimport {selectIsCollectionFetching} from '../../redux/shop/shop.selector';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nimport { Route } from 'react-router-dom';\nimport fetchCollectionStartAsync from '../../redux/shop/shop.actions';\nimport { createStructuredSelector } from 'reselect';\n\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n\n    componentDidMount() {\n        const { fetchCollectionStartAsync } = this.props;\n        fetchCollectionStartAsync();    \n    }\n\n    render() {\n        const { match,isCollectionFetching } = this.props;\n        return (\n            <div className='shop-page'>\n                <Route exact path={`${match.path}`} render={(props) => <CollectionOverviewWithSpinner isloading={isCollectionFetching} {...props} />} />\n                <Route path={`${match.path}/:collectionId`} render={(props) => <CollectionPageWithSpinner isloading={isCollectionFetching} {...props} />} />\n            </div>\n        )\n    }\n\n}\n\nconst mapStateToProps=createStructuredSelector(\n    isCollectionFetching=selectIsCollectionFetching\n)\n\nconst mapDispatchToProps = dispatch => ({\n    fetchCollectionStartAsync: dispatch(fetchCollectionStartAsync())\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}